@use "sass:map";

// Returns numerical value without unit (eg. px, em, rem)
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// Fluid type, credit: Mike Riethmuller (maths) & Geoff Graham (mixin)
// https://css-tricks.com/snippets/css/fluid-typography/
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin focus-style {
  &:focus {
    @apply outline-none;
  }

  .is-tab &:focus {
    @apply outline-standard;
    outline-offset: 2px;
  }
}

@mixin media-breakpoint-up($size) {
  @media (min-width: map.get($breakpoints, $size)) {
    @content;
  }
}

@mixin backdrop-blur {
  position: relative;

  *::before {
    backdrop-filter: none;
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    backdrop-filter: var(--backdrop-blur);
  }
}

@mixin section-colours {
  --section-text-color: var(--body-color);
  --section-link-color: var(--link-color);
  --section-link-hover-color: var(--link-hover-color);

  &[data-light-text] {
    --section-text-color: var(--color-white);
    --section-link-color: var(--color-broom);
    --section-link-hover-color: var(--color-broom);
  }

  color: var(--section-text-color);

  a {
    color: var(--section-link-color);
  }

  a:hover {
    color: var(--section-link-hover-color);
  }
}